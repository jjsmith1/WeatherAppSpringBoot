<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <title>Weather App</title>
   
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js"></script>

</head>

<body>
<div class="container bg-light justify-content-center">
    <div class="row">
        <div class="col col-md-6 offset-md-3">
            <br/>
           
            <h1 class="text-center">Get Your Local Forecast</h1>
   
    <form th:action="@{/}" th:object="${request}" method="post" autocomplete="off" >
        <div class="form-group">
            <input type="text" th:field="*{zipCode}" placeholder="Zip Code" class="form-control"/>
        </div>
        <div class="form-group">
            <button class="btn btn-md btn-primary btn-block" name="Submit" value="Submit" type="Submit">
                                                                                    Check Weather</button>
        </div>
   
	<div th:if="${data != null && data.name !='error'}">
	} 

    </form>
            
            
            <h3>Forecast for <span th:text="${data.name}"></span></h3>
            <p><b>Temperature:</b> <span th:text="${data.main.get('temp')}"></span> &deg;Â°F</p>
            <p><b>Cloud Cover:</b> <span th:text="${data.clouds.get('all')}"></span> %</p>
            <p><b>Wind:</b> <span th:text="${data.wind.get('speed')}"></span> mph</p>
            <p><b>Conditions:</b> <span th:text="${data.weather[0].get('description')}"></span>
            <img th:src="@{${'http://openweathermap.org/img/w/' 
                + data.weather[0].get('icon') + '.png'}}"></p>
        
        
      <span th:if="${data != null && data.name == 'error'}">
  Invalid zip code. Weather data not found.</span>  
        </div>
    </div>
  
  
   </div>
   
   
   
</div>



</body>
















HTML CODE
<html xmlns:th="http://www.thymeleaf.org">  Only code that differentiates from reg HTML.  CODE ALLOWS  thymeleaf to be used

 <form th:action="@{/}" th:object="${request}" method="post" autocomplete="off" >

th:action="@{/}": 
th:object="${request} :
method="post": 

 <input type="text" th:field="*{zipCode}" placeholder="Zip Code" class="form-control"/>
th:field="*{zipCode}  



xmlns:th allows other utiility imports and use them in the HTML 
thymeleaf is used to create dynamic webpages

restTemplate.getForObject Response.class
 model. addAttribute ("data", response)
 return index;

GET HTML Request
forObject:  whatever is received create an Object for it
 response.class  + set fields based upon JSON (fields in response Java variables)
 
 
 model. addAttribute ("data", response):
 model is a storage variable accessible by thymeleaf  
 addAttribute: 
 return index:  returns the template name  (file in source templates)
